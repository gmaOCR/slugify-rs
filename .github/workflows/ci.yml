name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test-slugify-rs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Create virtualenv and install maturin and test dependencies
        run: |
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install --upgrade pip
          # Ensure coverage backend is installed so pytest-cov can write XML
          pip install maturin pytest pytest-cov coverage

      - name: Run Rust unit tests (slugify-rs crate only)
        run: |
          cargo test -p slugify-rs --lib

      - name: Build and install Python extension for tests
        run: |
          . .venv/bin/activate
          .venv/bin/maturin develop --release --features python

      - name: Run Python integration tests (no coverage)
        run: |
          . .venv/bin/activate
          pytest tests/python || true

  # Collect Rust coverage with cargo-llvm-cov and upload to Codecov
  rust-coverage:
    runs-on: ubuntu-latest
    needs: test-slugify-rs
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - name: Install llvm tools and cargo-llvm-cov
        run: |
          rustup component add llvm-tools-preview || true
          cargo install cargo-llvm-cov || true

      - name: Run rust coverage and produce lcov
        run: |
          # Generate lcov info for the crate. cargo-llvm-cov will run tests with
          # instrumentation and collect coverage data.
          cargo llvm-cov --package slugify-rs --lcov --output-path lcov.info

      - name: Show lcov head for debugging
        run: |
          echo "lcov.info exists: $(test -f lcov.info && echo yes || echo no)"
          if [ -f lcov.info ]; then
            head -n 40 lcov.info
          fi

      - name: Upload rust coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          flags: rust
          verbose: true
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  golden-tests:
    runs-on: ubuntu-latest
    needs: test-slugify-rs
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Create virtualenv and install tooling
        run: |
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install --upgrade pip
          pip install maturin

      - name: Build Rust release binary (for harness fallback)
        run: |
          cargo build --release

      - name: Build and install Python extension (Rust binding)
        run: |
          . .venv/bin/activate
          .venv/bin/maturin develop --release --features python

      - name: Install reference python-slugify (local copy)
        run: |
          . .venv/bin/activate
          pip install python-slugify

      - name: Run golden harness (will fail CI on diffs)
        run: |
          . .venv/bin/activate
          # Capture both stdout and stderr to a log for debugging and fail on non-zero
          .venv/bin/python tests/golden_harness.py 2>&1 | tee golden_run.log

      - name: Upload golden harness log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: golden-harness-log
          path: golden_run.log
