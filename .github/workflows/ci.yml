name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test-slugify-rs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Create virtualenv and install maturin and test dependencies
        run: |
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install --upgrade pip
          # Ensure coverage backend is installed so pytest-cov can write XML
          pip install maturin pytest pytest-cov coverage

      - name: Run Rust unit tests (slugify-rs crate only)
        run: |
          cargo test -p slugify-rs --lib

      - name: Build and install Python extension for tests
        run: |
          . .venv/bin/activate
          .venv/bin/maturin develop --release --features python

      - name: Run Python tests with coverage
        run: |
          . .venv/bin/activate
          # Measure coverage for the whole checkout (module may be a compiled extension)
          pytest tests/python --cov=. --cov-report=xml:coverage.xml || true

      - name: Ensure coverage.xml exists (fallback)
        run: |
          . .venv/bin/activate
          echo "Current working directory: $(pwd)"
          ls -la
          if [ -f coverage.xml ]; then
            echo "coverage.xml found:"; head -n 40 coverage.xml
          elif [ -f .coverage ]; then
            echo "Found .coverage file, converting to coverage.xml"
            coverage xml -i -o coverage.xml
            echo "coverage.xml produced:"; head -n 40 coverage.xml
          else
            echo "No coverage data found (.coverage or coverage.xml). Continuing without coverage upload."
          fi

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  # Collect Rust coverage with cargo-llvm-cov and upload to Codecov
  rust-coverage:
    runs-on: ubuntu-latest
    needs: test-slugify-rs
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - name: Install llvm tools and cargo-llvm-cov
        run: |
          rustup component add llvm-tools-preview || true
          cargo install cargo-llvm-cov || true

      - name: Run rust coverage and produce lcov
        run: |
          # Generate lcov info for the crate. cargo-llvm-cov will run tests with
          # instrumentation and collect coverage data.
          cargo llvm-cov --package slugify-rs --lcov --output-path lcov.info

      - name: Upload rust coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          fail_ci_if_error: false
